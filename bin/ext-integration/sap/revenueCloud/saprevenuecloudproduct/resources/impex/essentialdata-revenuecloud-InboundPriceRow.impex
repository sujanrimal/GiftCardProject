INSERT_UPDATE IntegrationObject; code[unique = true]; integrationType(code) 
; InboundSubscriptionPricePlan; INBOUND 
 
INSERT_UPDATE IntegrationObjectItem; integrationObject(code)[unique=true]; code[unique = true]; type(code) 
; InboundSubscriptionPricePlan	; Unit                 	; Unit 
; InboundSubscriptionPricePlan	; RecurringChargeEntry 	; RecurringChargeEntry 
; InboundSubscriptionPricePlan	; BillingEvent         	; BillingEvent 
; InboundSubscriptionPricePlan	; Product              	; Product 
; InboundSubscriptionPricePlan	; Currency             	; Currency 
; InboundSubscriptionPricePlan	; Catalog              	; Catalog 
; InboundSubscriptionPricePlan	; OneTimeChargeEntry   	; OneTimeChargeEntry 
; InboundSubscriptionPricePlan	; SubscriptionPricePlan	; SubscriptionPricePlan 
; InboundSubscriptionPricePlan	; CatalogVersion       	; CatalogVersion 
 
INSERT_UPDATE IntegrationObjectItemAttribute; integrationObjectItem(integrationObject(code), code)[unique = true]; attributeName[unique = true]; attributeDescriptor(enclosingType(code), qualifier); returnIntegrationObjectItem(integrationObject(code), code); unique[default = false]; autoCreate[default = false] 
; InboundSubscriptionPricePlan:Unit                 	; code                  	; Unit:code                                   	;                                                  	; true	;  
; InboundSubscriptionPricePlan:RecurringChargeEntry 	; isProrated            	; RecurringChargeEntry:isProrated             	;                                                  	; 	;  
; InboundSubscriptionPricePlan:RecurringChargeEntry 	; catalogVersion        	; RecurringChargeEntry:catalogVersion         	; InboundSubscriptionPricePlan:CatalogVersion      	; true	;  
; InboundSubscriptionPricePlan:RecurringChargeEntry 	; cycleStart            	; RecurringChargeEntry:cycleStart             	;                                                  	; 	;  
; InboundSubscriptionPricePlan:RecurringChargeEntry 	; price                 	; RecurringChargeEntry:price                  	;                                                  	; 	;  
; InboundSubscriptionPricePlan:RecurringChargeEntry 	; isAdvanceBilled       	; RecurringChargeEntry:isAdvanceBilled        	;                                                  	; 	;  
; InboundSubscriptionPricePlan:RecurringChargeEntry 	; cycleEnd              	; RecurringChargeEntry:cycleEnd               	;                                                  	; 	;  
; InboundSubscriptionPricePlan:RecurringChargeEntry 	; id                    	; RecurringChargeEntry:id                     	;                                                  	; true	;  
; InboundSubscriptionPricePlan:BillingEvent         	; code                  	; BillingEvent:code                           	;                                                  	; true	;  
; InboundSubscriptionPricePlan:Product              	; code                  	; Product:code                                	;                                                  	; true	;  
; InboundSubscriptionPricePlan:Product              	; catalogVersion        	; Product:catalogVersion                      	; InboundSubscriptionPricePlan:CatalogVersion      	; true	;  
; InboundSubscriptionPricePlan:Currency             	; isocode               	; Currency:isocode                            	;                                                  	; true	;  
; InboundSubscriptionPricePlan:Catalog              	; id                    	; Catalog:id                                  	;                                                  	; true	;  
; InboundSubscriptionPricePlan:OneTimeChargeEntry   	; catalogVersion        	; OneTimeChargeEntry:catalogVersion           	; InboundSubscriptionPricePlan:CatalogVersion      	; true	;  
; InboundSubscriptionPricePlan:OneTimeChargeEntry   	; price                 	; OneTimeChargeEntry:price                    	;                                                  	; 	;  
; InboundSubscriptionPricePlan:OneTimeChargeEntry   	; id                    	; OneTimeChargeEntry:id                       	;                                                  	; true	;  
; InboundSubscriptionPricePlan:OneTimeChargeEntry   	; billingEvent          	; OneTimeChargeEntry:billingEvent             	; InboundSubscriptionPricePlan:BillingEvent        	; 	;  
; InboundSubscriptionPricePlan:SubscriptionPricePlan	; currency              	; SubscriptionPricePlan:currency              	; InboundSubscriptionPricePlan:Currency            	; 	;  
; InboundSubscriptionPricePlan:SubscriptionPricePlan	; catalogVersion        	; SubscriptionPricePlan:catalogVersion        	; InboundSubscriptionPricePlan:CatalogVersion      	; 	;  
; InboundSubscriptionPricePlan:SubscriptionPricePlan	; startTime             	; SubscriptionPricePlan:startTime             	;                                                  	; 	;  
; InboundSubscriptionPricePlan:SubscriptionPricePlan	; price                 	; SubscriptionPricePlan:price                 	;                                                  	; 	;  
; InboundSubscriptionPricePlan:SubscriptionPricePlan	; recurringChargeEntries	; SubscriptionPricePlan:recurringChargeEntries	; InboundSubscriptionPricePlan:RecurringChargeEntry	; 	;  
; InboundSubscriptionPricePlan:SubscriptionPricePlan	; oneTimeChargeEntries  	; SubscriptionPricePlan:oneTimeChargeEntries  	; InboundSubscriptionPricePlan:OneTimeChargeEntry  	; 	;  
; InboundSubscriptionPricePlan:SubscriptionPricePlan	; product               	; SubscriptionPricePlan:product               	; InboundSubscriptionPricePlan:Product             	; true	;  
; InboundSubscriptionPricePlan:SubscriptionPricePlan	; unit                  	; SubscriptionPricePlan:unit                  	; InboundSubscriptionPricePlan:Unit                	; 	;  
; InboundSubscriptionPricePlan:SubscriptionPricePlan	; endTime               	; SubscriptionPricePlan:endTime               	;                                                  	; 	;  
; InboundSubscriptionPricePlan:SubscriptionPricePlan	; pricePlanId           	; SubscriptionPricePlan:pricePlanId           	;                                                  	; true	;  
; InboundSubscriptionPricePlan:CatalogVersion       	; catalog               	; CatalogVersion:catalog                      	; InboundSubscriptionPricePlan:Catalog             	; true	;  
; InboundSubscriptionPricePlan:CatalogVersion       	; version               	; CatalogVersion:version                      	;                                                  	; true	;  


INSERT_UPDATE IntegrationObject; code[unique = true]; integrationType(code) 
; InboundVolumeCharge; INBOUND 
 
INSERT_UPDATE IntegrationObjectItem; integrationObject(code)[unique=true]; code[unique = true]; type(code) 
; InboundVolumeCharge	; Catalog              	; Catalog 
; InboundVolumeCharge	; UsageUnit            	; UsageUnit 
; InboundVolumeCharge	; SubscriptionPricePlan	; SubscriptionPricePlan 
; InboundVolumeCharge	; VolumeUsageCharge    	; VolumeUsageCharge 
; InboundVolumeCharge	; CatalogVersion       	; CatalogVersion 
 
INSERT_UPDATE IntegrationObjectItemAttribute; integrationObjectItem(integrationObject(code), code)[unique = true]; attributeName[unique = true]; attributeDescriptor(enclosingType(code), qualifier); returnIntegrationObjectItem(integrationObject(code), code); unique[default = false]; autoCreate[default = false] 
; InboundVolumeCharge:Catalog              	; id                        	; Catalog:id                                  	;                                          	; true	;  
; InboundVolumeCharge:UsageUnit            	; id                        	; UsageUnit:id                                	;                                          	; true	;  
; InboundVolumeCharge:SubscriptionPricePlan	; catalogVersion            	; SubscriptionPricePlan:catalogVersion        	; InboundVolumeCharge:CatalogVersion       	; 	;  
; InboundVolumeCharge:SubscriptionPricePlan	; pricePlanId               	; SubscriptionPricePlan:pricePlanId           	;                                          	; true	;  
; InboundVolumeCharge:VolumeUsageCharge    	; subscriptionPricePlanUsage	; VolumeUsageCharge:subscriptionPricePlanUsage	; InboundVolumeCharge:SubscriptionPricePlan	; 	;  
; InboundVolumeCharge:VolumeUsageCharge    	; catalogVersion            	; VolumeUsageCharge:catalogVersion            	; InboundVolumeCharge:CatalogVersion       	; true	;  
; InboundVolumeCharge:VolumeUsageCharge    	; minBlocks                 	; VolumeUsageCharge:minBlocks                 	;                                          	; 	;  
; InboundVolumeCharge:VolumeUsageCharge    	; name                      	; VolumeUsageCharge:name                      	;                                          	; 	;  
; InboundVolumeCharge:VolumeUsageCharge    	; blockSize                 	; VolumeUsageCharge:blockSize                 	;                                          	; 	;  
; InboundVolumeCharge:VolumeUsageCharge    	; id                        	; VolumeUsageCharge:id                        	;                                          	; true	;  
; InboundVolumeCharge:VolumeUsageCharge    	; usageUnit                 	; VolumeUsageCharge:usageUnit                 	; InboundVolumeCharge:UsageUnit            	; 	;  
; InboundVolumeCharge:CatalogVersion       	; catalog                   	; CatalogVersion:catalog                      	; InboundVolumeCharge:Catalog              	; true	;  
; InboundVolumeCharge:CatalogVersion       	; version                   	; CatalogVersion:version                      	;                                          	; true	;  


INSERT_UPDATE IntegrationObject; code[unique = true]; integrationType(code) 
; InboundVolumeUsageChargeEntry; INBOUND 
 
INSERT_UPDATE IntegrationObjectItem; integrationObject(code)[unique=true]; code[unique = true]; type(code) 
; InboundVolumeUsageChargeEntry	; CatalogVersion      	; CatalogVersion 
; InboundVolumeUsageChargeEntry	; TierUsageChargeEntry	; TierUsageChargeEntry 
; InboundVolumeUsageChargeEntry	; Catalog             	; Catalog 
; InboundVolumeUsageChargeEntry	; UsageCharge         	; UsageCharge 
 
INSERT_UPDATE IntegrationObjectItemAttribute; integrationObjectItem(integrationObject(code), code)[unique = true]; attributeName[unique = true]; attributeDescriptor(enclosingType(code), qualifier); returnIntegrationObjectItem(integrationObject(code), code); unique[default = false]; autoCreate[default = false] 
; InboundVolumeUsageChargeEntry:CatalogVersion      	; catalog       	; CatalogVersion:catalog             	; InboundVolumeUsageChargeEntry:Catalog       	; true	;  
; InboundVolumeUsageChargeEntry:CatalogVersion      	; version       	; CatalogVersion:version             	;                                             	; true	;  
; InboundVolumeUsageChargeEntry:TierUsageChargeEntry	; usageCharge   	; TierUsageChargeEntry:usageCharge   	; InboundVolumeUsageChargeEntry:UsageCharge   	; 	;  
; InboundVolumeUsageChargeEntry:TierUsageChargeEntry	; tierEnd       	; TierUsageChargeEntry:tierEnd       	;                                             	; 	;  
; InboundVolumeUsageChargeEntry:TierUsageChargeEntry	; price         	; TierUsageChargeEntry:price         	;                                             	; 	;  
; InboundVolumeUsageChargeEntry:TierUsageChargeEntry	; catalogVersion	; TierUsageChargeEntry:catalogVersion	; InboundVolumeUsageChargeEntry:CatalogVersion	; true	;  
; InboundVolumeUsageChargeEntry:TierUsageChargeEntry	; fixedPrice    	; TierUsageChargeEntry:fixedPrice    	;                                             	; 	;  
; InboundVolumeUsageChargeEntry:TierUsageChargeEntry	; tierStart     	; TierUsageChargeEntry:tierStart     	;                                             	; 	;  
; InboundVolumeUsageChargeEntry:TierUsageChargeEntry	; id            	; TierUsageChargeEntry:id            	;                                             	; true	;  
; InboundVolumeUsageChargeEntry:Catalog             	; id            	; Catalog:id                         	;                                             	; true	;  
; InboundVolumeUsageChargeEntry:UsageCharge         	; id            	; UsageCharge:id                     	;                                             	; true	;  
; InboundVolumeUsageChargeEntry:UsageCharge         	; catalogVersion	; UsageCharge:catalogVersion         	; InboundVolumeUsageChargeEntry:CatalogVersion	; 	;  


INSERT_UPDATE IntegrationObject; code[unique = true]; integrationType(code) 
; InboundVolumeOverUsageChargeEntry; INBOUND 
 
INSERT_UPDATE IntegrationObjectItem; integrationObject(code)[unique=true]; code[unique = true]; type(code) 
; InboundVolumeOverUsageChargeEntry	; Catalog                	; Catalog 
; InboundVolumeOverUsageChargeEntry	; OverageUsageChargeEntry	; OverageUsageChargeEntry 
; InboundVolumeOverUsageChargeEntry	; CatalogVersion         	; CatalogVersion 
; InboundVolumeOverUsageChargeEntry	; UsageCharge            	; UsageCharge 
 
INSERT_UPDATE IntegrationObjectItemAttribute; integrationObjectItem(integrationObject(code), code)[unique = true]; attributeName[unique = true]; attributeDescriptor(enclosingType(code), qualifier); returnIntegrationObjectItem(integrationObject(code), code); unique[default = false]; autoCreate[default = false] 
; InboundVolumeOverUsageChargeEntry:Catalog                	; id            	; Catalog:id                            	;                                                 	; true	;  
; InboundVolumeOverUsageChargeEntry:OverageUsageChargeEntry	; catalogVersion	; OverageUsageChargeEntry:catalogVersion	; InboundVolumeOverUsageChargeEntry:CatalogVersion	; true	;  
; InboundVolumeOverUsageChargeEntry:OverageUsageChargeEntry	; price         	; OverageUsageChargeEntry:price         	;                                                 	; 	;  
; InboundVolumeOverUsageChargeEntry:OverageUsageChargeEntry	; usageCharge   	; OverageUsageChargeEntry:usageCharge   	; InboundVolumeOverUsageChargeEntry:UsageCharge   	; 	;  
; InboundVolumeOverUsageChargeEntry:OverageUsageChargeEntry	; id            	; OverageUsageChargeEntry:id            	;                                                 	; true	;  
; InboundVolumeOverUsageChargeEntry:OverageUsageChargeEntry	; fixedPrice    	; OverageUsageChargeEntry:fixedPrice    	;                                                 	; 	;  
; InboundVolumeOverUsageChargeEntry:CatalogVersion         	; version       	; CatalogVersion:version                	;                                                 	; true	;  
; InboundVolumeOverUsageChargeEntry:CatalogVersion         	; catalog       	; CatalogVersion:catalog                	; InboundVolumeOverUsageChargeEntry:Catalog       	; true	;  
; InboundVolumeOverUsageChargeEntry:UsageCharge            	; blockSize     	; UsageCharge:blockSize                 	;                                                 	; 	;  
; InboundVolumeOverUsageChargeEntry:UsageCharge            	; catalogVersion	; UsageCharge:catalogVersion            	; InboundVolumeOverUsageChargeEntry:CatalogVersion	; 	;  
; InboundVolumeOverUsageChargeEntry:UsageCharge            	; id            	; UsageCharge:id                        	;                                                 	; true	;  


INSERT_UPDATE IntegrationObject; code[unique = true]; integrationType(code) 
; InboundBlockUsageCharge; INBOUND 
 
INSERT_UPDATE IntegrationObjectItem; integrationObject(code)[unique=true]; code[unique = true]; type(code) 
; InboundBlockUsageCharge	; UsageChargeType      	; UsageChargeType 
; InboundBlockUsageCharge	; PerUnitUsageCharge   	; PerUnitUsageCharge 
; InboundBlockUsageCharge	; UsageUnit            	; UsageUnit 
; InboundBlockUsageCharge	; CatalogVersion       	; CatalogVersion 
; InboundBlockUsageCharge	; SubscriptionPricePlan	; SubscriptionPricePlan 
; InboundBlockUsageCharge	; Catalog              	; Catalog 
 
INSERT_UPDATE IntegrationObjectItemAttribute; integrationObjectItem(integrationObject(code), code)[unique = true]; attributeName[unique = true]; attributeDescriptor(enclosingType(code), qualifier); returnIntegrationObjectItem(integrationObject(code), code); unique[default = false]; autoCreate[default = false] 
; InboundBlockUsageCharge:UsageChargeType      	; code                      	; UsageChargeType:code                         	;                                              	; true	;  
; InboundBlockUsageCharge:PerUnitUsageCharge   	; blockSize                 	; PerUnitUsageCharge:blockSize                 	;                                              	; 	;  
; InboundBlockUsageCharge:PerUnitUsageCharge   	; usageUnit                 	; PerUnitUsageCharge:usageUnit                 	; InboundBlockUsageCharge:UsageUnit            	; 	;  
; InboundBlockUsageCharge:PerUnitUsageCharge   	; catalogVersion            	; PerUnitUsageCharge:catalogVersion            	; InboundBlockUsageCharge:CatalogVersion       	; true	;  
; InboundBlockUsageCharge:PerUnitUsageCharge   	; id                        	; PerUnitUsageCharge:id                        	;                                              	; true	;  
; InboundBlockUsageCharge:PerUnitUsageCharge   	; includedQty               	; PerUnitUsageCharge:includedQty               	;                                              	; 	;  
; InboundBlockUsageCharge:PerUnitUsageCharge   	; usageChargeType           	; PerUnitUsageCharge:usageChargeType           	; InboundBlockUsageCharge:UsageChargeType      	; 	;  
; InboundBlockUsageCharge:PerUnitUsageCharge   	; subscriptionPricePlanUsage	; PerUnitUsageCharge:subscriptionPricePlanUsage	; InboundBlockUsageCharge:SubscriptionPricePlan	; 	;  
; InboundBlockUsageCharge:UsageUnit            	; id                        	; UsageUnit:id                                 	;                                              	; true	;  
; InboundBlockUsageCharge:CatalogVersion       	; version                   	; CatalogVersion:version                       	;                                              	; true	;  
; InboundBlockUsageCharge:CatalogVersion       	; catalog                   	; CatalogVersion:catalog                       	; InboundBlockUsageCharge:Catalog              	; true	;  
; InboundBlockUsageCharge:SubscriptionPricePlan	; pricePlanId               	; SubscriptionPricePlan:pricePlanId            	;                                              	; true	;  
; InboundBlockUsageCharge:SubscriptionPricePlan	; catalogVersion            	; SubscriptionPricePlan:catalogVersion         	; InboundBlockUsageCharge:CatalogVersion       	; 	;  
; InboundBlockUsageCharge:Catalog              	; id                        	; Catalog:id                                   	;                                              	; true	;  

INSERT_UPDATE IntegrationObject; code[unique = true]; integrationType(code) 
; InboundBlockUsageChargeEntry; INBOUND 
 
INSERT_UPDATE IntegrationObjectItem; integrationObject(code)[unique=true]; code[unique = true]; type(code) 
; InboundBlockUsageChargeEntry	; UsageCharge            	; UsageCharge 
; InboundBlockUsageChargeEntry	; Catalog                	; Catalog 
; InboundBlockUsageChargeEntry	; PerUnitUsageChargeEntry	; PerUnitUsageChargeEntry 
; InboundBlockUsageChargeEntry	; CatalogVersion         	; CatalogVersion 
 
INSERT_UPDATE IntegrationObjectItemAttribute; integrationObjectItem(integrationObject(code), code)[unique = true]; attributeName[unique = true]; attributeDescriptor(enclosingType(code), qualifier); returnIntegrationObjectItem(integrationObject(code), code); unique[default = false]; autoCreate[default = false] 
; InboundBlockUsageChargeEntry:UsageCharge            	; catalogVersion	; UsageCharge:catalogVersion            	; InboundBlockUsageChargeEntry:CatalogVersion	; 	;  
; InboundBlockUsageChargeEntry:UsageCharge            	; id            	; UsageCharge:id                        	;                                            	; true	;  
; InboundBlockUsageChargeEntry:Catalog                	; id            	; Catalog:id                            	;                                            	; true	;  
; InboundBlockUsageChargeEntry:PerUnitUsageChargeEntry	; price         	; PerUnitUsageChargeEntry:price         	;                                            	; 	;  
; InboundBlockUsageChargeEntry:PerUnitUsageChargeEntry	; catalogVersion	; PerUnitUsageChargeEntry:catalogVersion	; InboundBlockUsageChargeEntry:CatalogVersion	; true	;  
; InboundBlockUsageChargeEntry:PerUnitUsageChargeEntry	; usageCharge   	; PerUnitUsageChargeEntry:usageCharge   	; InboundBlockUsageChargeEntry:UsageCharge   	; 	;  
; InboundBlockUsageChargeEntry:PerUnitUsageChargeEntry	; fixedPrice    	; PerUnitUsageChargeEntry:fixedPrice    	;                                            	; 	;  
; InboundBlockUsageChargeEntry:PerUnitUsageChargeEntry	; id            	; PerUnitUsageChargeEntry:id            	;                                            	; true	;  
; InboundBlockUsageChargeEntry:CatalogVersion         	; version       	; CatalogVersion:version                	;                                            	; true	;  
; InboundBlockUsageChargeEntry:CatalogVersion         	; catalog       	; CatalogVersion:catalog                	; InboundBlockUsageChargeEntry:Catalog       	; true	;  


INSERT_UPDATE IntegrationObject; code[unique = true]; integrationType(code) 
; InboundTierUsageCharge; INBOUND 
 
INSERT_UPDATE IntegrationObjectItem; integrationObject(code)[unique=true]; code[unique = true]; type(code) 
; InboundTierUsageCharge	; SubscriptionPricePlan	; SubscriptionPricePlan 
; InboundTierUsageCharge	; CatalogVersion       	; CatalogVersion 
; InboundTierUsageCharge	; UsageUnit            	; UsageUnit 
; InboundTierUsageCharge	; Catalog              	; Catalog 
; InboundTierUsageCharge	; PerUnitUsageCharge   	; PerUnitUsageCharge 
; InboundTierUsageCharge	; UsageChargeType      	; UsageChargeType 
 
INSERT_UPDATE IntegrationObjectItemAttribute; integrationObjectItem(integrationObject(code), code)[unique = true]; attributeName[unique = true]; attributeDescriptor(enclosingType(code), qualifier); returnIntegrationObjectItem(integrationObject(code), code); unique[default = false]; autoCreate[default = false] 
; InboundTierUsageCharge:SubscriptionPricePlan	; catalogVersion            	; SubscriptionPricePlan:catalogVersion         	; InboundTierUsageCharge:CatalogVersion       	; 	;  
; InboundTierUsageCharge:SubscriptionPricePlan	; pricePlanId               	; SubscriptionPricePlan:pricePlanId            	;                                             	; true	;  
; InboundTierUsageCharge:CatalogVersion       	; version                   	; CatalogVersion:version                       	;                                             	; true	;  
; InboundTierUsageCharge:CatalogVersion       	; catalog                   	; CatalogVersion:catalog                       	; InboundTierUsageCharge:Catalog              	; true	;  
; InboundTierUsageCharge:UsageUnit            	; id                        	; UsageUnit:id                                 	;                                             	; true	;  
; InboundTierUsageCharge:Catalog              	; id                        	; Catalog:id                                   	;                                             	; true	;  
; InboundTierUsageCharge:PerUnitUsageCharge   	; id                        	; PerUnitUsageCharge:id                        	;                                             	; true	;  
; InboundTierUsageCharge:PerUnitUsageCharge   	; usageUnit                 	; PerUnitUsageCharge:usageUnit                 	; InboundTierUsageCharge:UsageUnit            	; 	;  
; InboundTierUsageCharge:PerUnitUsageCharge   	; catalogVersion            	; PerUnitUsageCharge:catalogVersion            	; InboundTierUsageCharge:CatalogVersion       	; true	;  
; InboundTierUsageCharge:PerUnitUsageCharge   	; usageChargeType           	; PerUnitUsageCharge:usageChargeType           	; InboundTierUsageCharge:UsageChargeType      	; 	;  
; InboundTierUsageCharge:PerUnitUsageCharge   	; subscriptionPricePlanUsage	; PerUnitUsageCharge:subscriptionPricePlanUsage	; InboundTierUsageCharge:SubscriptionPricePlan	; 	;  
; InboundTierUsageCharge:UsageChargeType      	; code                      	; UsageChargeType:code                         	;                                             	; true	;  


INSERT_UPDATE IntegrationObject; code[unique = true]; integrationType(code) 
; InboundTierUsageChargeEntry; INBOUND 
 
INSERT_UPDATE IntegrationObjectItem; integrationObject(code)[unique=true]; code[unique = true]; type(code) 
; InboundTierUsageChargeEntry	; Catalog             	; Catalog 
; InboundTierUsageChargeEntry	; TierUsageChargeEntry	; TierUsageChargeEntry 
; InboundTierUsageChargeEntry	; CatalogVersion      	; CatalogVersion 
; InboundTierUsageChargeEntry	; UsageCharge         	; UsageCharge 
 
INSERT_UPDATE IntegrationObjectItemAttribute; integrationObjectItem(integrationObject(code), code)[unique = true]; attributeName[unique = true]; attributeDescriptor(enclosingType(code), qualifier); returnIntegrationObjectItem(integrationObject(code), code); unique[default = false]; autoCreate[default = false] 
; InboundTierUsageChargeEntry:Catalog             	; id            	; Catalog:id                         	;                                           	; true	;  
; InboundTierUsageChargeEntry:TierUsageChargeEntry	; catalogVersion	; TierUsageChargeEntry:catalogVersion	; InboundTierUsageChargeEntry:CatalogVersion	; true	;  
; InboundTierUsageChargeEntry:TierUsageChargeEntry	; fixedPrice    	; TierUsageChargeEntry:fixedPrice    	;                                           	; 	;  
; InboundTierUsageChargeEntry:TierUsageChargeEntry	; tierStart     	; TierUsageChargeEntry:tierStart     	;                                           	; 	;  
; InboundTierUsageChargeEntry:TierUsageChargeEntry	; tierEnd       	; TierUsageChargeEntry:tierEnd       	;                                           	; 	;  
; InboundTierUsageChargeEntry:TierUsageChargeEntry	; price         	; TierUsageChargeEntry:price         	;                                           	; 	;  
; InboundTierUsageChargeEntry:TierUsageChargeEntry	; usageCharge   	; TierUsageChargeEntry:usageCharge   	; InboundTierUsageChargeEntry:UsageCharge   	; 	;  
; InboundTierUsageChargeEntry:TierUsageChargeEntry	; id            	; TierUsageChargeEntry:id            	;                                           	; true	;  
; InboundTierUsageChargeEntry:CatalogVersion      	; version       	; CatalogVersion:version             	;                                           	; true	;  
; InboundTierUsageChargeEntry:CatalogVersion      	; catalog       	; CatalogVersion:catalog             	; InboundTierUsageChargeEntry:Catalog       	; true	;  
; InboundTierUsageChargeEntry:UsageCharge         	; catalogVersion	; UsageCharge:catalogVersion         	; InboundTierUsageChargeEntry:CatalogVersion	; 	;  
; InboundTierUsageChargeEntry:UsageCharge         	; id            	; UsageCharge:id                     	;                                           	; true	;  



INSERT_UPDATE IntegrationObject; code[unique = true]; integrationType(code) 
; InboundTierOverUsageChargeEntry; INBOUND 
 
INSERT_UPDATE IntegrationObjectItem; integrationObject(code)[unique=true]; code[unique = true]; type(code) 
; InboundTierOverUsageChargeEntry	; UsageCharge            	; UsageCharge 
; InboundTierOverUsageChargeEntry	; Catalog                	; Catalog 
; InboundTierOverUsageChargeEntry	; CatalogVersion         	; CatalogVersion 
; InboundTierOverUsageChargeEntry	; OverageUsageChargeEntry	; OverageUsageChargeEntry 
 
INSERT_UPDATE IntegrationObjectItemAttribute; integrationObjectItem(integrationObject(code), code)[unique = true]; attributeName[unique = true]; attributeDescriptor(enclosingType(code), qualifier); returnIntegrationObjectItem(integrationObject(code), code); unique[default = false]; autoCreate[default = false] 
; InboundTierOverUsageChargeEntry:UsageCharge            	; catalogVersion	; UsageCharge:catalogVersion            	; InboundTierOverUsageChargeEntry:CatalogVersion	; 	;  
; InboundTierOverUsageChargeEntry:UsageCharge            	; id            	; UsageCharge:id                        	;                                               	; true	;  
; InboundTierOverUsageChargeEntry:Catalog                	; id            	; Catalog:id                            	;                                               	; true	;  
; InboundTierOverUsageChargeEntry:CatalogVersion         	; version       	; CatalogVersion:version                	;                                               	; true	;  
; InboundTierOverUsageChargeEntry:CatalogVersion         	; catalog       	; CatalogVersion:catalog                	; InboundTierOverUsageChargeEntry:Catalog       	; true	;  
; InboundTierOverUsageChargeEntry:OverageUsageChargeEntry	; catalogVersion	; OverageUsageChargeEntry:catalogVersion	; InboundTierOverUsageChargeEntry:CatalogVersion	; true	;  
; InboundTierOverUsageChargeEntry:OverageUsageChargeEntry	; id            	; OverageUsageChargeEntry:id            	;                                               	; true	;  
; InboundTierOverUsageChargeEntry:OverageUsageChargeEntry	; fixedPrice    	; OverageUsageChargeEntry:fixedPrice    	;                                               	; 	;  
; InboundTierOverUsageChargeEntry:OverageUsageChargeEntry	; price         	; OverageUsageChargeEntry:price         	;                                               	; 	;  
; InboundTierOverUsageChargeEntry:OverageUsageChargeEntry	; usageCharge   	; OverageUsageChargeEntry:usageCharge   	; InboundTierOverUsageChargeEntry:UsageCharge   	; 	;  
